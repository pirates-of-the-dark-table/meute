var VCard;
(function(){
VCard=function(){
};
VCard.prototype={setAttribute:function(_1,_2){
this[_1]=_2;
},addAttribute:function(_3,_4){
console.log("add attribute",_3,_4);
if(VCard.multivaluedKeys[_3]){
if(this[_3]){
this[_3].push(_4);
}else{
this.setAttribute(_3,[_4]);
}
}else{
this.setAttribute(_3,_4);
}
},toJCard:function(){
var _5={};
for(var k in VCard.allKeys){
var _6=VCard.allKeys[k];
if(this[_6]){
_5[_6]=this[_6];
}
}
return _5;
}};
VCard.allKeys=["fn","n","nickname","photo","bday","anniversary","gender","tel","email"];
VCard.multivaluedKeys={email:true,tel:true};
})();
var VCF;
(function(){
VCF={simpleKeys:["VERSION","FN","PHOTO"],csvKeys:["NICKNAME"],dateAndOrTimeKeys:["BDAY","ANNIVERSARY"],parse:function(_1,_2,_3){
var _4=null;
if(!_3){
_3=this;
}
this.lex(_1,function(_5,_6,_7){
function _8(_9){
if(_4){
_4.addAttribute(_5.toLowerCase(),_9);
}
};
if(_5=="BEGIN"){
_4=new VCard();
}else{
if(_5=="END"){
if(_4){
_2.apply(_3,[_4]);
_4=null;
}
}else{
if(this.simpleKeys.indexOf(_5)!=-1){
_8(_6);
}else{
if(this.csvKeys.indexOf(_5)!=-1){
_8(_6.split(","));
}else{
if(this.dateAndOrTimeKeys.indexOf(_5)!=-1){
if(_7.VALUE=="text"){
_8(_6);
}else{
if(_7.CALSCALE&&_7.CALSCALE!="gregorian"){
}else{
_8(this.parseDateAndOrTime(_6));
}
}
}else{
if(_5=="N"){
_8(this.parseName(_6));
}else{
if(_5=="GENDER"){
_8(this.parseGender(_6));
}else{
if(_5=="TEL"){
_8({type:(_7.TYPE||"voice"),value:_6});
}else{
if(_5=="EMAIL"){
_8({type:_7.TYPE,value:_6});
}else{
if(_5=="IMPP"){
_8({value:_6});
}else{
console.log("WARNING: unhandled key: ",_5);
}
}
}
}
}
}
}
}
}
}
});
},nameParts:["family-name","given-name","additional-name","honorific-prefix","honorific-suffix"],parseName:function(_a){
var _b=_a.split(";");
var n={};
for(var i in _b){
if(_b[i]){
n[this.nameParts[i]]=_b[i].split(",");
}
}
return n;
},parseGender:function(_c){
var _d={};
var _e=_c.split(";");
switch(_e[0]){
case "M":
_d.sex="male";
break;
case "F":
_d.sex="female";
break;
case "O":
_d.sex="other";
}
if(_e[1]){
_d.identity=_e[1];
}
return _d;
},dateRE:/^(\d{4})(\d{2})(\d{2})$/,dateReducedARE:/^(\d{4})\-(\d{2})$/,dateReducedBRE:/^(\d{4})$/,dateTruncatedMDRE:/^\-{2}(\d{2})(\d{2})$/,dateTruncatedDRE:/^\-{3}(\d{2})$/,timeRE:/^(\d{2})(\d{2})(\d{2})([+\-]\d+|Z|)$/,timeReducedARE:/^(\d{2})(\d{2})([+\-]\d+|Z|)$/,timeReducedBRE:/^(\d{2})([+\-]\d+|Z|)$/,timeTruncatedMSRE:/^\-{2}(\d{2})(\d{2})([+\-]\d+|Z|)$/,timeTruncatedSRE:/^\-{3}(\d{2})([+\-]\d+|Z|)$/,parseDate:function(_f){
var md;
var y,m,d;
if((md=_f.match(this.dateRE))){
y=md[1];
m=md[2];
d=md[3];
}else{
if((md=_f.match(this.dateReducedARE))){
y=md[1];
m=md[2];
}else{
if((md=_f.match(this.dateReducedBRE))){
y=md[1];
}else{
if((md=_f.match(this.dateTruncatedMDRE))){
m=md[1];
d=md[2];
}else{
if((md=_f.match(this.dateTruncatedDRE))){
d=md[1];
}else{
console.error("WARNING: failed to parse date: ",_f);
return null;
}
}
}
}
}
var dt=new Date(0);
if(typeof (y)!="undefined"){
dt.setUTCFullYear(y);
}
if(typeof (m)!="undefined"){
dt.setUTCMonth(m-1);
}
if(typeof (d)!="undefined"){
dt.setUTCDate(d);
}
return dt;
},parseTime:function(_10){
var md;
var h,m,s,tz;
if((md=_10.match(this.timeRE))){
h=md[1];
m=md[2];
s=md[3];
tz=md[4];
}else{
if((md=_10.match(this.timeReducedARE))){
h=md[1];
m=md[2];
tz=md[3];
}else{
if((md=_10.match(this.timeReducedBRE))){
h=md[1];
tz=md[2];
}else{
if((md=_10.match(this.timeTruncatedMSRE))){
m=md[1];
s=md[2];
tz=md[3];
}else{
if((md=_10.match(this.timeTruncatedSRE))){
s=md[1];
tz=md[2];
}else{
console.error("WARNING: failed to parse time: ",_10);
return null;
}
}
}
}
}
var dt=new Date(0);
if(typeof (h)!="undefined"){
dt.setUTCHours(h);
}
if(typeof (m)!="undefined"){
dt.setUTCMinutes(m);
}
if(typeof (s)!="undefined"){
dt.setUTCSeconds(s);
}
if(tz){
dt=this.applyTimezone(dt,tz);
}
return dt;
},addDates:function(_11,_12,_13){
if(typeof (_13)=="undefined"){
_13=true;
}
if(!_11){
return _12;
}
if(!_12){
return _11;
}
var a=Number(_11);
var b=Number(_12);
var c=_13?a+b:a-b;
return new Date(c);
},applyTimezone:function(_14,tz){
var md;
if((md=tz.match(/^([+\-])(\d{2})(\d{2})?/))){
var _15=new Date(0);
_15.setUTCHours(md[2]);
_15.setUTCMinutes(md[3]||0);
return this.addDates(_14,_15,md[1]=="+");
}else{
return _14;
}
},parseDateTime:function(_16){
var _17=_16.split("T");
var t=this.parseDate(_17[0]);
var d=this.parseTime(_17[1]);
return this.addDates(t,d);
},parseDateAndOrTime:function(_18){
switch(_18.indexOf("T")){
case 0:
return this.parseTime(_18.slice(1));
case -1:
return this.parseDate(_18);
default:
return this.parseDateTime(_18);
}
},lineRE:/^([^\s].*)(?:\r?\n|$)/,foldedLineRE:/^\s(.+)(?:\r?\n|$)/,lex:function(_19,_1a){
var md,_1b=null,_1c=0;
for(;;){
if((md=_19.match(this.lineRE))){
if(_1b){
this.lexLine(_1b,_1a);
}
_1b=md[1];
_1c=md[0].length;
}else{
if((md=_19.match(this.foldedLineRE))){
if(_1b){
_1b+=md[1];
_1c=md[0].length;
}else{
}
}else{
console.error("Unmatched line: "+_1b);
}
}
_19=_19.slice(_1c);
if(!_19){
break;
}
}
if(_1b){
this.lexLine(_1b,_1a);
}
_1b=null;
},lexLine:function(_1d,_1e){
var tmp="";
var key=null,_1f={},_20=null,_21=null;
function _22(){
if(key){
if(_21){
_1f[_21]=tmp;
}else{
console.error("Invalid attribute: ",tmp,"Line dropped.");
return;
}
}else{
key=tmp;
}
};
for(var i in _1d){
var c=_1d[i];
switch(c){
case ":":
_22();
_20=_1d.slice(Number(i)+1);
_1e.apply(this,[key,_20,_1f]);
return;
case ";":
_22();
tmp="";
break;
case "=":
_21=tmp;
tmp="";
break;
default:
tmp+=c;
}
}
}};
})();

