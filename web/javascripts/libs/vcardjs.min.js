define("vcardjs",function(){
var _1;
(function(){
_1=function(){
};
_1.prototype={setAttribute:function(_2,_3){
this[_2]=_3;
},addAttribute:function(_4,_5){
console.log("add attribute",_4,_5);
if(_1.multivaluedKeys[_4]){
if(this[_4]){
this[_4].push(_5);
}else{
this.setAttribute(_4,[_5]);
}
}else{
this.setAttribute(_4,_5);
}
},toJCard:function(){
var _6={};
for(var k in _1.allKeys){
var _7=_1.allKeys[k];
if(this[_7]){
_6[_7]=this[_7];
}
}
return _6;
}};
_1.allKeys=["fn","n","nickname","photo","bday","anniversary","gender","tel","email"];
_1.multivaluedKeys={email:true,tel:true};
})();
var _8;
(function(){
_8={simpleKeys:["VERSION","FN","PHOTO"],csvKeys:["NICKNAME"],dateAndOrTimeKeys:["BDAY","ANNIVERSARY"],parse:function(_9,_a,_b){
var _c=null;
if(!_b){
_b=this;
}
this.lex(_9,function(_d,_e,_f){
function _10(val){
if(_c){
_c.addAttribute(_d.toLowerCase(),val);
}
};
if(_d=="BEGIN"){
_c=new _1();
}else{
if(_d=="END"){
if(_c){
_a.apply(_b,[_c]);
_c=null;
}
}else{
if(this.simpleKeys.indexOf(_d)!=-1){
_10(_e);
}else{
if(this.csvKeys.indexOf(_d)!=-1){
_10(_e.split(","));
}else{
if(this.dateAndOrTimeKeys.indexOf(_d)!=-1){
if(_f.VALUE=="text"){
_10(_e);
}else{
if(_f.CALSCALE&&_f.CALSCALE!="gregorian"){
}else{
_10(this.parseDateAndOrTime(_e));
}
}
}else{
if(_d=="N"){
_10(this.parseName(_e));
}else{
if(_d=="GENDER"){
_10(this.parseGender(_e));
}else{
if(_d=="TEL"){
_10({type:(_f.TYPE||"voice"),value:_e});
}else{
if(_d=="EMAIL"){
_10({type:_f.TYPE,value:_e});
}else{
if(_d=="IMPP"){
_10({value:_e});
}else{
console.log("WARNING: unhandled key: ",_d);
}
}
}
}
}
}
}
}
}
}
});
},nameParts:["family-name","given-name","additional-name","honorific-prefix","honorific-suffix"],parseName:function(_11){
var _12=_11.split(";");
var n={};
for(var i in _12){
if(_12[i]){
n[this.nameParts[i]]=_12[i].split(",");
}
}
return n;
},parseGender:function(_13){
var _14={};
var _15=_13.split(";");
switch(_15[0]){
case "M":
_14.sex="male";
break;
case "F":
_14.sex="female";
break;
case "O":
_14.sex="other";
}
if(_15[1]){
_14.identity=_15[1];
}
return _14;
},dateRE:/^(\d{4})(\d{2})(\d{2})$/,dateReducedARE:/^(\d{4})\-(\d{2})$/,dateReducedBRE:/^(\d{4})$/,dateTruncatedMDRE:/^\-{2}(\d{2})(\d{2})$/,dateTruncatedDRE:/^\-{3}(\d{2})$/,timeRE:/^(\d{2})(\d{2})(\d{2})([+\-]\d+|Z|)$/,timeReducedARE:/^(\d{2})(\d{2})([+\-]\d+|Z|)$/,timeReducedBRE:/^(\d{2})([+\-]\d+|Z|)$/,timeTruncatedMSRE:/^\-{2}(\d{2})(\d{2})([+\-]\d+|Z|)$/,timeTruncatedSRE:/^\-{3}(\d{2})([+\-]\d+|Z|)$/,parseDate:function(_16){
var md;
var y,m,d;
if((md=_16.match(this.dateRE))){
y=md[1];
m=md[2];
d=md[3];
}else{
if((md=_16.match(this.dateReducedARE))){
y=md[1];
m=md[2];
}else{
if((md=_16.match(this.dateReducedBRE))){
y=md[1];
}else{
if((md=_16.match(this.dateTruncatedMDRE))){
m=md[1];
d=md[2];
}else{
if((md=_16.match(this.dateTruncatedDRE))){
d=md[1];
}else{
console.error("WARNING: failed to parse date: ",_16);
return null;
}
}
}
}
}
var dt=new Date(0);
if(typeof (y)!="undefined"){
dt.setUTCFullYear(y);
}
if(typeof (m)!="undefined"){
dt.setUTCMonth(m-1);
}
if(typeof (d)!="undefined"){
dt.setUTCDate(d);
}
return dt;
},parseTime:function(_17){
var md;
var h,m,s,tz;
if((md=_17.match(this.timeRE))){
h=md[1];
m=md[2];
s=md[3];
tz=md[4];
}else{
if((md=_17.match(this.timeReducedARE))){
h=md[1];
m=md[2];
tz=md[3];
}else{
if((md=_17.match(this.timeReducedBRE))){
h=md[1];
tz=md[2];
}else{
if((md=_17.match(this.timeTruncatedMSRE))){
m=md[1];
s=md[2];
tz=md[3];
}else{
if((md=_17.match(this.timeTruncatedSRE))){
s=md[1];
tz=md[2];
}else{
console.error("WARNING: failed to parse time: ",_17);
return null;
}
}
}
}
}
var dt=new Date(0);
if(typeof (h)!="undefined"){
dt.setUTCHours(h);
}
if(typeof (m)!="undefined"){
dt.setUTCMinutes(m);
}
if(typeof (s)!="undefined"){
dt.setUTCSeconds(s);
}
if(tz){
dt=this.applyTimezone(dt,tz);
}
return dt;
},addDates:function(_18,_19,_1a){
if(typeof (_1a)=="undefined"){
_1a=true;
}
if(!_18){
return _19;
}
if(!_19){
return _18;
}
var a=Number(_18);
var b=Number(_19);
var c=_1a?a+b:a-b;
return new Date(c);
},applyTimezone:function(_1b,tz){
var md;
if((md=tz.match(/^([+\-])(\d{2})(\d{2})?/))){
var _1c=new Date(0);
_1c.setUTCHours(md[2]);
_1c.setUTCMinutes(md[3]||0);
return this.addDates(_1b,_1c,md[1]=="+");
}else{
return _1b;
}
},parseDateTime:function(_1d){
var _1e=_1d.split("T");
var t=this.parseDate(_1e[0]);
var d=this.parseTime(_1e[1]);
return this.addDates(t,d);
},parseDateAndOrTime:function(_1f){
switch(_1f.indexOf("T")){
case 0:
return this.parseTime(_1f.slice(1));
case -1:
return this.parseDate(_1f);
default:
return this.parseDateTime(_1f);
}
},lineRE:/^([^\s].*)(?:\r?\n|$)/,foldedLineRE:/^\s(.+)(?:\r?\n|$)/,lex:function(_20,_21){
var md,_22=null,_23=0;
for(;;){
if((md=_20.match(this.lineRE))){
if(_22){
this.lexLine(_22,_21);
}
_22=md[1];
_23=md[0].length;
}else{
if((md=_20.match(this.foldedLineRE))){
if(_22){
_22+=md[1];
_23=md[0].length;
}else{
}
}else{
console.error("Unmatched line: "+_22);
}
}
_20=_20.slice(_23);
if(!_20){
break;
}
}
if(_22){
this.lexLine(_22,_21);
}
_22=null;
},lexLine:function(_24,_25){
var tmp="";
var key=null,_26={},_27=null,_28=null;
function _29(){
if(key){
if(_28){
_26[_28]=tmp;
}else{
console.error("Invalid attribute: ",tmp,"Line dropped.");
return;
}
}else{
key=tmp;
}
};
for(var i in _24){
var c=_24[i];
switch(c){
case ":":
_29();
_27=_24.slice(Number(i)+1);
_25.apply(this,[key,_27,_26]);
return;
case ";":
_29();
tmp="";
break;
case "=":
_28=tmp;
tmp="";
break;
default:
tmp+=c;
}
}
}};
})();
return {VCF:_8,VCard:_1};
});

